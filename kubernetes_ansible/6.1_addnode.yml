- hosts: workers
  gather_facts: no
  tasks:
  - name: upgrade all packages
    yum: 
     name=epel-release 
     state=latest
  - name: upgrade all packages
    yum: 
     name='*' 
     state=latest
  - name: disable SELinux
    command: setenforce 0
  - name: disable SELinux on reboot
    selinux:
       state: disabled

- hosts: workers
  become: yes
  tasks:
  tasks:
   - name: br_netfilter
     shell: modprobe br_netfilter

   - name: ensure net.bridge.bridge-nf-call-ip6tables is set to 1
     sysctl:
      name: net.bridge.bridge-nf-call-ip6tables
      value: 1
      state: present

   - name: ensure net.bridge.bridge-nf-call-iptables is set to 1
     sysctl:
      name: net.bridge.bridge-nf-call-iptables
      value: 1
      state: present

- hosts: workers
  become: yes
  tasks:
   - name: install Docker
     yum:
       name: docker
       state: latest
       update_cache: true

   - name: start Docker
     service:
       name: docker
       state: started
       enabled: yes
       
   - name: remove driver to logs to fluentd
     lineinfile:
        dest: /etc/sysconfig/docker
        state: absent
        regexp: "OPTIONS='--selinux-enabled --log-driver=journald --signature-verification=false'"
       
   - name: ensure file exists
     copy:
       content: ""
       dest: /etc/docker/daemon.json
       force: no
       group: sys
       owner: root
       mode: 0555
       
   - name: Insert a line at the end of a file.
     lineinfile:
        path: /etc/hosts
        line: "  registryip    registryname"
        
   - name: Insert a line at the end of a file.
     lineinfile:
        path: /etc/docker/daemon.json
        line: "***"
        
   - name: remove everything in file
     lineinfile:
        dest: /etc/docker/daemon.json
        state: absent
        regexp: ".*"
        
   - easy_install:
        name: pip
        state: latest
    
   - name: install docker-py 
     shell: pip install docker-py

        
   - name: Insert a line at the end of a file.
     lineinfile:
        path: /etc/docker/daemon.json
        line: "{ \"insecure-registries\" : [ \"registryname:5000\" ]}"
        
   - name: reload systemd
     command: systemctl daemon-reload
      
   - name: restart docker
     service:
       name: docker
       state: restarted
       
   - name: Log into private registry and force re-authorization
     docker_login:
        registry: registryname:5000
        username: alineuser
        password: Aline-12#
        reauthorize: yes
       
   - name: Kubernetes
     yum_repository:
      name: Kubernetes
      description: Kubernetes
      baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
      gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
      gpgcheck: yes
      enabled: yes
      repo_gpgcheck: yes
 

   - name: install kubernetes
     shell: sudo yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
     
   - name: start kubelet
     service:
       name: kubelet
       enabled: yes
       state: started
       
- hosts: masters
  become: yes
  gather_facts: false
  tasks:
   - name: get join command
     shell: kubeadm token create --print-join-command
     register: join_command_raw

   - name: set join command
     set_fact:
       join_command: "{{ join_command_raw.stdout_lines[0] }}"

- hosts: workers
  become: yes
  tasks:
   - name: br_netfilter
     shell: modprobe br_netfilter

   - name: ensure net.bridge.bridge-nf-call-ip6tables is set to 1
     sysctl:
      name: net.bridge.bridge-nf-call-ip6tables
      value: 1
      state: present

   - name: ensure net.bridge.bridge-nf-call-iptables is set to 1
     sysctl:
      name: net.bridge.bridge-nf-call-iptables
      value: 1
      state: present

- hosts: workers
  become: yes
  tasks:
   - name: join cluster
     shell: "{{ hostvars['master'].join_command }} --ignore-preflight-errors all  >> node_joined.txt"
     args:
       chdir: $HOME
       creates: node_joined.txt

     